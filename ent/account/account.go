// Code generated by entc, DO NOT EDIT.

package account

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldOwner holds the string denoting the owner field in the database.
	FieldOwner = "owner"
	// FieldBalance holds the string denoting the balance field in the database.
	FieldBalance = "balance"
	// FieldCurrency holds the string denoting the currency field in the database.
	FieldCurrency = "currency"
	// EdgeEntries holds the string denoting the entries edge name in mutations.
	EdgeEntries = "entries"
	// EdgeOutbound holds the string denoting the outbound edge name in mutations.
	EdgeOutbound = "outbound"
	// EdgeInbound holds the string denoting the inbound edge name in mutations.
	EdgeInbound = "inbound"
	// Table holds the table name of the account in the database.
	Table = "accounts"
	// EntriesTable is the table the holds the entries relation/edge.
	EntriesTable = "entries"
	// EntriesInverseTable is the table name for the Entry entity.
	// It exists in this package in order to avoid circular dependency with the "entry" package.
	EntriesInverseTable = "entries"
	// EntriesColumn is the table column denoting the entries relation/edge.
	EntriesColumn = "account_entries"
	// OutboundTable is the table the holds the outbound relation/edge.
	OutboundTable = "transfers"
	// OutboundInverseTable is the table name for the Transfer entity.
	// It exists in this package in order to avoid circular dependency with the "transfer" package.
	OutboundInverseTable = "transfers"
	// OutboundColumn is the table column denoting the outbound relation/edge.
	OutboundColumn = "account_outbound"
	// InboundTable is the table the holds the inbound relation/edge.
	InboundTable = "transfers"
	// InboundInverseTable is the table name for the Transfer entity.
	// It exists in this package in order to avoid circular dependency with the "transfer" package.
	InboundInverseTable = "transfers"
	// InboundColumn is the table column denoting the inbound relation/edge.
	InboundColumn = "account_inbound"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldOwner,
	FieldBalance,
	FieldCurrency,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// OwnerValidator is a validator for the "owner" field. It is called by the builders before save.
	OwnerValidator func(string) error
	// DefaultBalance holds the default value on creation for the "balance" field.
	DefaultBalance int32
	// CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	CurrencyValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
